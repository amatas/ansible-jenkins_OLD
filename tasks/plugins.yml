---

# Jenkins comes with bundled plugins that get priority during deployment. This
# means that any newer version of a bundled plugin that gets downloaded to
# ~/plugins will be ignored and replaced with the bundled version the next
# time Jenkins is restarted.
#
# A workaround is to download a newer version and pin it (create a .pinned
# file). In this case Jenkins will not atempt to overwrite the newer version.
#
# Pinning a plugin does not mean that newer versions will get ignored. The
# pluginManager will continue to check for newer version and make them avai-
# lable through the web interface.

- name: Get list of currently installed plugins
  shell: "java -jar {{ jenkins_cli_jar }} -s http://localhost:{{ jenkins_port }}/ list-plugins | awk '{ print $1 }'"
  register: plugin_list

- name: Install additional plugins and update everything
  get_url:
    dest: "{{ jenkins_home }}/plugins/{{ item }}.jpi"
    url: "{{ jenkins_updates_url }}/latest/{{ item }}.hpi"
    force: yes
    owner: "{{ jenkins_user }}"
  with_items:
    - "{{ plugin_list.stdout_lines }}"
    - "{{ jenkins_plugins }}"
  notify:
    - restart jenkins

- name: Pin all plugins to avoid bundled versions getting reinstalled
  file:
    path: "{{ jenkins_home }}/plugins/{{ item }}.jpi.pinned"
    state: touch
    owner: "{{ jenkins_user }}"
  with_items:
    - "{{ plugin_list.stdout_lines }}"
    - "{{ jenkins_plugins }}"
  notify:
    - restart jenkins

